{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruse\\\\Downloads\\\\Spring-Security-React-App\\\\Spring-Security-React-App\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport LoginButton from \"../components/LoginButton\";\nimport FUCKOFFBUTTON from \"../components/FUCKOFFBUTTON\";\nimport './LoginPage.css';\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const validateEmail = () => {\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(email)) {\n      setEmailError('Please enter a valid email address');\n      return false;\n    }\n    return true;\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    // Reset previous validation errors\n    setEmailError('');\n    setPasswordError('');\n\n    // Perform validation\n    let isValid = true;\n\n    // Validate email\n    isValid = validateEmail() && isValid;\n    if (!password.trim()) {\n      setPasswordError('Password is required');\n      isValid = false;\n    }\n\n    // If form is valid, proceed with login\n    if (isValid) {\n      // Here you can add your authentication logic\n      // For simplicity, just redirect to another page after login\n      navigate('/dashboard');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-register-now-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"New?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"zIZCmlOiNSialOrVCrKbGZC8KFg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["LoginButton","FUCKOFFBUTTON","useState","Link","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","validateEmail","emailPattern","test","handleLogin","e","preventDefault","isValid","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/kruse/Downloads/Spring-Security-React-App/Spring-Security-React-App/frontend/src/pages/LoginPage.js"],"sourcesContent":["import LoginButton from \"../components/LoginButton\";\r\nimport FUCKOFFBUTTON from \"../components/FUCKOFFBUTTON\";\r\nimport './LoginPage.css'\r\nimport {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const validateEmail = () => {\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(email)) {\r\n            setEmailError('Please enter a valid email address');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // Reset previous validation errors\r\n        setEmailError('');\r\n        setPasswordError('');\r\n\r\n        // Perform validation\r\n        let isValid = true;\r\n\r\n        // Validate email\r\n        isValid = validateEmail() && isValid;\r\n\r\n        if (!password.trim()) {\r\n            setPasswordError('Password is required');\r\n            isValid = false;\r\n        }\r\n\r\n        // If form is valid, proceed with login\r\n        if (isValid) {\r\n            // Here you can add your authentication logic\r\n            // For simplicity, just redirect to another page after login\r\n            navigate('/dashboard');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                {emailError && <div className=\"error-message\">{emailError}</div>}\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {passwordError && <div className=\"error-message\">{passwordError}</div>}\r\n                <LoginButton />\r\n            </form>\r\n            <div className={\"new-register-now-container\"}>\r\n                <p>New?</p>\r\n                <Link to={\"/register\"}>Register now</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}