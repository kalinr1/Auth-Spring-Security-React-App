{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruse\\\\Downloads\\\\Spring-Security-React-App\\\\Spring-Security-React-App\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport './RegisterPage.css';\nimport { useState } from \"react\";\nimport RegisterButton from \"../components/RegisterButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [formState, setFormState] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const validateField = (fieldName, value) => {\n    const namePattern = /^[A-Za-z]+$/;\n    const emailPattern = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    switch (fieldName) {\n      case 'firstName':\n        return namePattern.test(value.trim()) ? '' : `Please enter a valid first name`;\n      case 'lastName':\n        return namePattern.test(value.trim()) ? '' : `Please enter a valid last name`;\n      case 'email':\n        return emailPattern.test(value) ? '' : 'Please enter a valid email address';\n      case 'password':\n        return value.length >= 6 ? '' : 'Password must be at least 6 characters long';\n      case 'confirmPassword':\n        return value === formState.password ? '' : 'Passwords do not match';\n      default:\n        return '';\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors({});\n\n    // const fieldsToValidate = ['firstName', 'lastName', 'email', 'password', 'confirmPassword'];\n    // const newErrors = {};\n    let isValid = true;\n\n    // fieldsToValidate.forEach(fieldName => {\n    //     const fieldError = validateField(fieldName, formState[fieldName]);\n    //     if (fieldError) {\n    //         newErrors[fieldName] = fieldError;\n    //         isValid = false;\n    //     }\n    // });\n\n    if (isValid) {\n      try {\n        const response = await fetch('http://localhost:8080/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formState)\n        });\n        if (response.ok) {\n          console.log('Registration successful');\n          // Redirect user or show success message\n        } else {\n          const errorData = await response.json();\n          console.error('Registration failed:', errorData);\n          const formattedErrors = {};\n          errorData.forEach(error => {\n            formattedErrors[error.field] = error.defaultMessage;\n          });\n          setErrors(formattedErrors);\n          console.log(formattedErrors);\n        }\n      } catch (error) {\n        console.error('Error registering:', error);\n      }\n    } else {\n      // setErrors(newErrors);\n    }\n  };\n  const handleChange = (fieldName, value) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [fieldName]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: formState.firstName,\n        onChange: e => handleChange('firstName', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: formState.lastName,\n        onChange: e => handleChange('lastName', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: formState.email,\n        onChange: e => handleChange('email', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formState.password,\n        onChange: e => handleChange('password', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: formState.confirmPassword,\n        onChange: e => handleChange('confirmPassword', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register 123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"2hORIN02yHQOP+pRq/vIocv5hxA=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","RegisterButton","jsxDEV","_jsxDEV","RegisterPage","_s","formState","setFormState","firstName","lastName","email","password","confirmPassword","errors","setErrors","validateField","fieldName","value","namePattern","emailPattern","test","trim","length","handleSubmit","e","preventDefault","isValid","response","fetch","method","headers","body","JSON","stringify","ok","console","log","errorData","json","error","formattedErrors","forEach","field","defaultMessage","handleChange","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/kruse/Downloads/Spring-Security-React-App/Spring-Security-React-App/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import './RegisterPage.css';\r\nimport { useState } from \"react\";\r\nimport RegisterButton from \"../components/RegisterButton\";\r\n\r\nconst RegisterPage = () => {\r\n    const [formState, setFormState] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validateField = (fieldName, value) => {\r\n        const namePattern = /^[A-Za-z]+$/;\r\n        const emailPattern = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n        switch (fieldName) {\r\n            case 'firstName':\r\n                return namePattern.test(value.trim()) ? '' : `Please enter a valid first name`;\r\n            case 'lastName':\r\n                return namePattern.test(value.trim()) ? '' : `Please enter a valid last name`;\r\n            case 'email':\r\n                return emailPattern.test(value) ? '' : 'Please enter a valid email address';\r\n            case 'password':\r\n                return value.length >= 6 ? '' : 'Password must be at least 6 characters long';\r\n            case 'confirmPassword':\r\n                return value === formState.password ? '' : 'Passwords do not match';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrors({});\r\n\r\n        // const fieldsToValidate = ['firstName', 'lastName', 'email', 'password', 'confirmPassword'];\r\n        // const newErrors = {};\r\n        let isValid = true;\r\n\r\n        // fieldsToValidate.forEach(fieldName => {\r\n        //     const fieldError = validateField(fieldName, formState[fieldName]);\r\n        //     if (fieldError) {\r\n        //         newErrors[fieldName] = fieldError;\r\n        //         isValid = false;\r\n        //     }\r\n        // });\r\n\r\n        if (isValid) {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/register', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(formState)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    console.log('Registration successful');\r\n                    // Redirect user or show success message\r\n                } else {\r\n                    const errorData = await response.json();\r\n                    console.error('Registration failed:', errorData);\r\n                    const formattedErrors = {};\r\n                    errorData.forEach(error => {\r\n                        formattedErrors[error.field] = error.defaultMessage;\r\n                    });\r\n                    setErrors(formattedErrors);\r\n                    console.log(formattedErrors)\r\n                }\r\n            } catch (error) {\r\n                console.error('Error registering:', error);\r\n            }\r\n        } else {\r\n            // setErrors(newErrors);\r\n        }\r\n    };\r\n\r\n    const handleChange = (fieldName, value) => {\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [fieldName]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-page-container\">\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    value={formState.firstName}\r\n                    onChange={(e) => handleChange('firstName', e.target.value)}\r\n                />\r\n                {errors.firstName && <div className=\"error-message\">{errors.firstName}</div>}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    value={formState.lastName}\r\n                    onChange={(e) => handleChange('lastName', e.target.value)}\r\n                />\r\n                {errors.lastName && <div className=\"error-message\">{errors.lastName}</div>}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={formState.email}\r\n                    onChange={(e) => handleChange('email', e.target.value)}\r\n                />\r\n                {errors.email && <div className=\"error-message\">{errors.email}</div>}\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={formState.password}\r\n                    onChange={(e) => handleChange('password', e.target.value)}\r\n                />\r\n                {errors.password && <div className=\"error-message\">{errors.password}</div>}\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={formState.confirmPassword}\r\n                    onChange={(e) => handleChange('confirmPassword', e.target.value)}\r\n                />\r\n                {errors.confirmPassword && <div className=\"error-message\">{errors.confirmPassword}</div>}\r\n                <button>Register 123</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}