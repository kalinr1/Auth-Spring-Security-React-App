{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruse\\\\Downloads\\\\Spring-Security-React-App\\\\Spring-Security-React-App\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport LoginButton from \"../components/LoginButton\";\nimport './LoginPage.css';\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formState, setFormState] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const validateField = (fieldName, value) => {\n    const emailPattern = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    switch (fieldName) {\n      case 'email':\n        return emailPattern.test(value) ? '' : 'Please enter a valid email address';\n      case 'password':\n        return value.length >= 6 ? '' : 'Password must be at least 6 characters long';\n      default:\n        return '';\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors({});\n    const fieldsToValidate = ['email', 'password'];\n    const newErrors = {};\n    let isValid = true;\n    fieldsToValidate.forEach(fieldName => {\n      const fieldError = validateField(fieldName, formState[fieldName]);\n      if (fieldError) {\n        newErrors[fieldName] = fieldError;\n        isValid = false;\n      }\n    });\n    if (isValid) {\n      try {\n        const response = await fetch('http://localhost:8080/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formState)\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          console.log('Login successful');\n\n          // Redirect user or show success message\n        } else {\n          const errorData = await response.json();\n          console.error('Login failed:', errorData);\n          const formattedErrors = {};\n          errorData.forEach(error => {\n            formattedErrors[error.field] = error.defaultMessage;\n          });\n          setErrors(formattedErrors);\n          console.log(formattedErrors);\n        }\n      } catch (error) {\n        console.error('Error registering:', error);\n      }\n    } else {\n      setErrors(newErrors);\n    }\n  };\n  const handleChange = (fieldName, value) => {\n    setFormState(prevState => ({\n      ...prevState,\n      [fieldName]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: formState.email,\n        onChange: e => handleChange('email', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: formState.password,\n        onChange: e => handleChange('password', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-register-now-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"New?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"n0T0mYd363HVUaDuLcyZMtlHDGc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\n\n//const navigate = useNavigate();\n//\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [emailError, setEmailError] = useState('');\n//     const [passwordError, setPasswordError] = useState('');\n//\n//     const validateEmail = () => {\n//         const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//         if (!emailPattern.test(email)) {\n//             setEmailError('Please enter a valid email address');\n//             return false;\n//         }\n//         return true;\n//     };\n//\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         // Reset previous validation errors\n//         setEmailError('');\n//         setPasswordError('');\n//\n//         // Perform validation\n//         let isValid = true;\n//\n//         // Validate email\n//         isValid = validateEmail() && isValid;\n//\n//         if (!password.trim()) {\n//             setPasswordError('Password is required');\n//             isValid = false;\n//         }\n//\n//         // If form is valid, proceed with login\n//         if (isValid) {\n//             // Here you can add your authentication logic\n//             // For simplicity, just redirect to another page after login\n//             navigate('/dashboard');\n//         }\n//     };\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["LoginButton","useState","Link","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","formState","setFormState","email","password","errors","setErrors","validateField","fieldName","value","emailPattern","test","length","handleSubmit","e","preventDefault","fieldsToValidate","newErrors","isValid","forEach","fieldError","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","errorData","error","formattedErrors","field","defaultMessage","handleChange","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/kruse/Downloads/Spring-Security-React-App/Spring-Security-React-App/frontend/src/pages/LoginPage.js"],"sourcesContent":["import LoginButton from \"../components/LoginButton\";\r\nimport './LoginPage.css'\r\nimport {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const [formState, setFormState] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const validateField = (fieldName, value) => {\r\n        const emailPattern = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n        switch (fieldName) {\r\n            case 'email':\r\n                return emailPattern.test(value) ? '' : 'Please enter a valid email address';\r\n            case 'password':\r\n                return value.length >= 6 ? '' : 'Password must be at least 6 characters long';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErrors({});\r\n\r\n        const fieldsToValidate = ['email', 'password'];\r\n        const newErrors = {};\r\n        let isValid = true;\r\n\r\n        fieldsToValidate.forEach(fieldName => {\r\n            const fieldError = validateField(fieldName, formState[fieldName]);\r\n            if (fieldError) {\r\n                newErrors[fieldName] = fieldError;\r\n                isValid = false;\r\n            }\r\n        });\r\n\r\n        if (isValid) {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(formState)\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    console.log(data)\r\n                    console.log('Login successful');\r\n\r\n\r\n                    // Redirect user or show success message\r\n                } else {\r\n                    const errorData = await response.json();\r\n                    console.error('Login failed:', errorData);\r\n                    const formattedErrors = {};\r\n                    errorData.forEach(error => {\r\n                        formattedErrors[error.field] = error.defaultMessage;\r\n                    });\r\n                    setErrors(formattedErrors);\r\n                    console.log(formattedErrors)\r\n                }\r\n            } catch (error) {\r\n                console.error('Error registering:', error);\r\n            }\r\n        } else {\r\n            setErrors(newErrors);\r\n        }\r\n    };\r\n\r\n    const handleChange = (fieldName, value) => {\r\n        setFormState(prevState => ({\r\n            ...prevState,\r\n            [fieldName]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={formState.email}\r\n                    onChange={(e) => handleChange('email', e.target.value)}\r\n                />\r\n                {errors.email && <div className=\"error-message\">{errors.email}</div>}\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={formState.password}\r\n                    onChange={(e) => handleChange('password', e.target.value)}\r\n                />\r\n                {errors.password && <div className=\"error-message\">{errors.password}</div>}\r\n                <LoginButton />\r\n            </form>\r\n            <div className={\"new-register-now-container\"}>\r\n                <p>New?</p>\r\n                <Link to={\"/register\"}>Register now.</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage\r\n\r\n\r\n\r\n//const navigate = useNavigate();\r\n//\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [emailError, setEmailError] = useState('');\r\n//     const [passwordError, setPasswordError] = useState('');\r\n//\r\n//     const validateEmail = () => {\r\n//         const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n//         if (!emailPattern.test(email)) {\r\n//             setEmailError('Please enter a valid email address');\r\n//             return false;\r\n//         }\r\n//         return true;\r\n//     };\r\n//\r\n//     const handleLogin = (e) => {\r\n//         e.preventDefault();\r\n//         // Reset previous validation errors\r\n//         setEmailError('');\r\n//         setPasswordError('');\r\n//\r\n//         // Perform validation\r\n//         let isValid = true;\r\n//\r\n//         // Validate email\r\n//         isValid = validateEmail() && isValid;\r\n//\r\n//         if (!password.trim()) {\r\n//             setPasswordError('Password is required');\r\n//             isValid = false;\r\n//         }\r\n//\r\n//         // If form is valid, proceed with login\r\n//         if (isValid) {\r\n//             // Here you can add your authentication logic\r\n//             // For simplicity, just redirect to another page after login\r\n//             navigate('/dashboard');\r\n//         }\r\n//     };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}