{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruse\\\\Downloads\\\\Spring-Security-React-App\\\\Spring-Security-React-App\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport { AuthProvider, useAuth } from \"./auth/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Component\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isAdmin\n  } = useAuth();\n\n  // Your authentication logic goes here...\n\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 30\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 46\n  }, this);\n};\n_s(PrivateRoute, \"fipPGOM0smy0Bu0bk5gKKlYM6dM=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"user\",\n          element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            Component: RegisterPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 5\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","Navigate","Route","Routes","LoginPage","RegisterPage","AuthProvider","useAuth","jsxDEV","_jsxDEV","PrivateRoute","element","Component","_s","isAuthenticated","isAdmin","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","root","createRoot","document","getElementById","render","children","StrictMode","path","$RefreshReg$"],"sources":["C:/Users/kruse/Downloads/Spring-Security-React-App/Spring-Security-React-App/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Navigate, Route, Routes} from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport {AuthProvider, useAuth} from \"./auth/AuthContext\";\n\nconst PrivateRoute = ({ element: Component }) => {\n    const { isAuthenticated, isAdmin } = useAuth();\n\n    // Your authentication logic goes here...\n\n    return isAuthenticated ? <Component /> : <Navigate to=\"/login\" />;\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <BrowserRouter>\n        <AuthProvider>\n        <React.StrictMode>\n            <Routes>\n                <Route path=\"/\" element={<App />} />\n                <Route path=\"/login\" element={<LoginPage />} />\n                <Route path=\"/register\" element={<RegisterPage />} />\n                <Route path=\"/dashboard\" element={<RegisterPage />} />\n                <Route path=\"user\" element={<PrivateRoute Component={RegisterPage} />} />\n            </Routes>\n        </React.StrictMode>\n        </AuthProvider>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}