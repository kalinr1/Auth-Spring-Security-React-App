{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruse\\\\Downloads\\\\Spring-Security-React-App\\\\Spring-Security-React-App\\\\frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [authData, setAuthData] = useState(() => {\n    const token = localStorage.getItem('auth_token');\n    const roles = localStorage.getItem('user_roles');\n    return {\n      token,\n      roles\n    };\n  });\n  const login = (newToken, newRoles) => {\n    localStorage.setItem('auth_token', newToken);\n    localStorage.setItem('user_roles', JSON.stringify(newRoles));\n    setAuthData({\n      token: newToken,\n      roles: newRoles\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user_roles');\n    setAuthData({\n      token: null,\n      roles: null\n    });\n  };\n  const isAuthenticated = () => {\n    const {\n      token\n    } = authData;\n    // Check if token exists\n    if (!token) {\n      return false;\n    }\n\n    // Check if token is expired\n    const decodedToken = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    if (decodedToken.exp < currentTime) {\n      // Token is expired\n      logout();\n      return false;\n    }\n    return true;\n  };\n  const hasRole = role => {\n    const {\n      roles\n    } = authData;\n    return roles && roles.includes(role);\n  };\n  const value = {\n    ...authData,\n    login,\n    logout,\n    isAuthenticated,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n_s2(AuthProvider, \"572vAquvw770X1X2Mfx+Pnkce4s=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jwtDecode","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authData","setAuthData","token","localStorage","getItem","roles","login","newToken","newRoles","setItem","JSON","stringify","logout","removeItem","isAuthenticated","decodedToken","currentTime","Date","now","exp","hasRole","role","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kruse/Downloads/Spring-Security-React-App/Spring-Security-React-App/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [authData, setAuthData] = useState(() => {\r\n        const token = localStorage.getItem('auth_token');\r\n        const roles = localStorage.getItem('user_roles');\r\n        return { token, roles };\r\n    });\r\n\r\n    const login = (newToken, newRoles) => {\r\n        localStorage.setItem('auth_token', newToken);\r\n        localStorage.setItem('user_roles', JSON.stringify(newRoles));\r\n        setAuthData({ token: newToken, roles: newRoles });\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('auth_token');\r\n        localStorage.removeItem('user_roles');\r\n        setAuthData({ token: null, roles: null });\r\n    };\r\n\r\n    const isAuthenticated = () => {\r\n        const { token } = authData;\r\n        // Check if token exists\r\n        if (!token) {\r\n            return false;\r\n        }\r\n\r\n        // Check if token is expired\r\n        const decodedToken = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n        if (decodedToken.exp < currentTime) {\r\n            // Token is expired\r\n            logout();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const hasRole = (role) => {\r\n        const { roles } = authData;\r\n        return roles && roles.includes(role);\r\n    };\r\n\r\n    const value = {\r\n        ...authData,\r\n        login,\r\n        logout,\r\n        isAuthenticated,\r\n        hasRole,\r\n    };\r\n\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,MAAM;IAC3C,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAO;MAAEF,KAAK;MAAEG;IAAM,CAAC;EAC3B,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAClCL,YAAY,CAACM,OAAO,CAAC,YAAY,EAAEF,QAAQ,CAAC;IAC5CJ,YAAY,CAACM,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;IAC5DP,WAAW,CAAC;MAAEC,KAAK,EAAEK,QAAQ;MAAEF,KAAK,EAAEG;IAAS,CAAC,CAAC;EACrD,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACjBT,YAAY,CAACU,UAAU,CAAC,YAAY,CAAC;IACrCV,YAAY,CAACU,UAAU,CAAC,YAAY,CAAC;IACrCZ,WAAW,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEG,KAAK,EAAE;IAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAM;MAAEZ;IAAM,CAAC,GAAGF,QAAQ;IAC1B;IACA,IAAI,CAACE,KAAK,EAAE;MACR,OAAO,KAAK;IAChB;;IAEA;IACA,MAAMa,YAAY,GAAGxB,SAAS,CAACW,KAAK,CAAC;IACrC,MAAMc,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;MAChC;MACAJ,MAAM,CAAC,CAAC;MACR,OAAO,KAAK;IAChB;IAEA,OAAO,IAAI;EACf,CAAC;EAED,MAAMQ,OAAO,GAAIC,IAAI,IAAK;IACtB,MAAM;MAAEhB;IAAM,CAAC,GAAGL,QAAQ;IAC1B,OAAOK,KAAK,IAAIA,KAAK,CAACiB,QAAQ,CAACD,IAAI,CAAC;EACxC,CAAC;EAED,MAAME,KAAK,GAAG;IACV,GAAGvB,QAAQ;IACXM,KAAK;IACLM,MAAM;IACNE,eAAe;IACfM;EACJ,CAAC;EAED,oBAAO3B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAAEA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF,CAAC;AAAC7B,GAAA,CApDWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}