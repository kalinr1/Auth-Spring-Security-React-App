{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{jwtDecode}from\"jwt-decode\";import Cookies from\"js-cookie\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[token,setToken]=useState(()=>{const cookieToken=Cookies.get('auth_token');console.log(\"Initial token from cookies:\",cookieToken);return cookieToken||null;});const[isAdmin,setIsAdmin]=useState(false);useEffect(()=>{if(token){try{console.log(\"Decoding token in useEffect:\",token);const decodedToken=jwtDecode(token);console.log(\"Decoded token:\",decodedToken);setIsAdmin(decodedToken.role==='ADMIN');}catch(error){console.error(\"Invalid token in useEffect\",error);logout();// Logout if the token is invalid\n}}},[token]);const login=newToken=>{try{console.log(\"Decoding token in login:\",newToken);const decodedToken=jwtDecode(newToken);console.log(\"Decoded token:\",decodedToken);document.cookie=\"auth_token=\".concat(newToken,\"; Path=/; Secure; SameSite=Strict\");setToken(newToken);setIsAdmin(decodedToken.role==='ADMIN');}catch(error){console.error(\"Invalid token on login\",error);// Handle invalid token during login if necessary\n}};const logout=()=>{console.log(\"Logging out...\");document.cookie='auth_token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Secure; SameSite=Strict';setToken(null);setIsAdmin(false);};const isAuthenticated=()=>{if(!token){console.log(\"No token found\");return false;}try{console.log(\"Decoding token in isAuthenticated:\",token);const decodedToken=jwtDecode(token);console.log(\"Decoded token:\",decodedToken);const currentTime=Date.now()/1000;if(decodedToken.exp<currentTime){console.log(\"Token is expired\");logout();return false;}return true;}catch(error){console.error(\"Invalid token during authentication check\",error);logout();// Logout if the token is invalid\nreturn false;}};const value={token,login,logout,isAuthenticated,isAdmin};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jwtDecode","Cookies","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","token","setToken","cookieToken","get","console","log","isAdmin","setIsAdmin","decodedToken","role","error","logout","login","newToken","document","cookie","concat","isAuthenticated","currentTime","Date","now","exp","value","Provider"],"sources":["C:/Users/kruse/Downloads/Spring-Security-React-App/Spring-Security-React-App/frontend/src/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport {jwtDecode} from \"jwt-decode\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [token, setToken] = useState(() => {\r\n        const cookieToken = Cookies.get('auth_token');\r\n        console.log(\"Initial token from cookies:\", cookieToken);\r\n        return cookieToken || null;\r\n    });\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            try {\r\n                console.log(\"Decoding token in useEffect:\", token);\r\n                const decodedToken = jwtDecode(token);\r\n                console.log(\"Decoded token:\", decodedToken);\r\n                setIsAdmin(decodedToken.role === 'ADMIN');\r\n            } catch (error) {\r\n                console.error(\"Invalid token in useEffect\", error);\r\n                logout(); // Logout if the token is invalid\r\n            }\r\n        }\r\n    }, [token]);\r\n\r\n    const login = (newToken) => {\r\n        try {\r\n            console.log(\"Decoding token in login:\", newToken);\r\n            const decodedToken = jwtDecode(newToken);\r\n            console.log(\"Decoded token:\", decodedToken);\r\n            document.cookie = `auth_token=${newToken}; Path=/; Secure; SameSite=Strict`;\r\n            setToken(newToken);\r\n            setIsAdmin(decodedToken.role === 'ADMIN');\r\n        } catch (error) {\r\n            console.error(\"Invalid token on login\", error);\r\n            // Handle invalid token during login if necessary\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log(\"Logging out...\");\r\n        document.cookie = 'auth_token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Secure; SameSite=Strict';\r\n        setToken(null);\r\n        setIsAdmin(false);\r\n    };\r\n\r\n    const isAuthenticated = () => {\r\n        if (!token) {\r\n            console.log(\"No token found\");\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            console.log(\"Decoding token in isAuthenticated:\", token);\r\n            const decodedToken = jwtDecode(token);\r\n            console.log(\"Decoded token:\", decodedToken);\r\n            const currentTime = Date.now() / 1000;\r\n            if (decodedToken.exp < currentTime) {\r\n                console.log(\"Token is expired\");\r\n                logout();\r\n                return false;\r\n            }\r\n            return true;\r\n        } catch (error) {\r\n            console.error(\"Invalid token during authentication check\", error);\r\n            logout(); // Logout if the token is invalid\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const value = {\r\n        token,\r\n        login,\r\n        logout,\r\n        isAuthenticated,\r\n        isAdmin\r\n    };\r\n\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,OAAQC,SAAS,KAAO,YAAY,CACpC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhC,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAS,OAAO,CAAGA,CAAA,GAAMR,UAAU,CAACO,WAAW,CAAC,CAEpD,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAM,CACrC,KAAM,CAAAY,WAAW,CAAGV,OAAO,CAACW,GAAG,CAAC,YAAY,CAAC,CAC7CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEH,WAAW,CAAC,CACvD,MAAO,CAAAA,WAAW,EAAI,IAAI,CAC9B,CAAC,CAAC,CACF,KAAM,CAACI,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAE7CD,SAAS,CAAC,IAAM,CACZ,GAAIW,KAAK,CAAE,CACP,GAAI,CACAI,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEL,KAAK,CAAC,CAClD,KAAM,CAAAQ,YAAY,CAAGjB,SAAS,CAACS,KAAK,CAAC,CACrCI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEG,YAAY,CAAC,CAC3CD,UAAU,CAACC,YAAY,CAACC,IAAI,GAAK,OAAO,CAAC,CAC7C,CAAE,MAAOC,KAAK,CAAE,CACZN,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDC,MAAM,CAAC,CAAC,CAAE;AACd,CACJ,CACJ,CAAC,CAAE,CAACX,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAY,KAAK,CAAIC,QAAQ,EAAK,CACxB,GAAI,CACAT,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEQ,QAAQ,CAAC,CACjD,KAAM,CAAAL,YAAY,CAAGjB,SAAS,CAACsB,QAAQ,CAAC,CACxCT,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEG,YAAY,CAAC,CAC3CM,QAAQ,CAACC,MAAM,eAAAC,MAAA,CAAiBH,QAAQ,qCAAmC,CAC3EZ,QAAQ,CAACY,QAAQ,CAAC,CAClBN,UAAU,CAACC,YAAY,CAACC,IAAI,GAAK,OAAO,CAAC,CAC7C,CAAE,MAAOC,KAAK,CAAE,CACZN,OAAO,CAACM,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C;AACJ,CACJ,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACjBP,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7BS,QAAQ,CAACC,MAAM,CAAG,qFAAqF,CACvGd,QAAQ,CAAC,IAAI,CAAC,CACdM,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CAED,KAAM,CAAAU,eAAe,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAACjB,KAAK,CAAE,CACRI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7B,MAAO,MAAK,CAChB,CAEA,GAAI,CACAD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAEL,KAAK,CAAC,CACxD,KAAM,CAAAQ,YAAY,CAAGjB,SAAS,CAACS,KAAK,CAAC,CACrCI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEG,YAAY,CAAC,CAC3C,KAAM,CAAAU,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CACrC,GAAIZ,YAAY,CAACa,GAAG,CAAGH,WAAW,CAAE,CAChCd,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAC/BM,MAAM,CAAC,CAAC,CACR,MAAO,MAAK,CAChB,CACA,MAAO,KAAI,CACf,CAAE,MAAOD,KAAK,CAAE,CACZN,OAAO,CAACM,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACjEC,MAAM,CAAC,CAAC,CAAE;AACV,MAAO,MAAK,CAChB,CACJ,CAAC,CAED,KAAM,CAAAW,KAAK,CAAG,CACVtB,KAAK,CACLY,KAAK,CACLD,MAAM,CACNM,eAAe,CACfX,OACJ,CAAC,CAED,mBAAOZ,IAAA,CAACC,WAAW,CAAC4B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAvB,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}