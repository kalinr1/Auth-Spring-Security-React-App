{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruse\\\\Downloads\\\\Spring-Security-React-App\\\\Spring-Security-React-App\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport './RegisterPage.css';\nimport { useState } from \"react\";\nimport RegisterButton from \"../components/RegisterButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [errors, setErrors] = useState({});\n  const validateFirstName = () => {\n    // Name validation logic\n    const namePattern = /^[A-Za-z]+$/; // Pattern to allow only alphabetic characters\n    if (!namePattern.test(firstName)) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        firstName: 'Please enter a valid first name'\n      }));\n      return false;\n    }\n    return true;\n  };\n  const validateLastName = () => {\n    // Name validation logic\n    const namePattern = /^[A-Za-z]+$/; // Pattern to allow only alphabetic characters\n    if (!namePattern.test(lastName)) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        lastName: 'Please enter a valid last name'\n      }));\n      return false;\n    }\n    return true;\n  };\n  const validateEmail = () => {\n    // Email validation logic (regex or other validation methods)\n    // For example, regex pattern for email validation\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailPattern.test(email)) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        email: 'Please enter a valid email address'\n      }));\n      return false;\n    }\n    return true;\n  };\n  const validatePassword = () => {\n    // Password validation logic\n    if (password.length < 6) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        password: 'Password must be at least 6 characters long'\n      }));\n      return false;\n    }\n    return true;\n  };\n  const validateConfirmPassword = () => {\n    // Confirm password validation logic\n    if (password !== confirmPassword) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        confirmPassword: 'Passwords do not match'\n      }));\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Reset errors\n    setErrors({});\n\n    // Perform field validations\n    const isValidEmail = validateEmail();\n    const isValidPassword = validatePassword();\n    const isValidConfirmPassword = validateConfirmPassword();\n    const isValidFirstName = validateFirstName();\n\n    // If all validations pass, proceed with registration\n    if (isValidEmail && isValidPassword && isValidConfirmPassword && isValidFirstName) {\n      // Here you can add your registration logic\n      // For simplicity, just log the registration data\n      console.log('Registration data:', {\n        firstName,\n        lastName,\n        email,\n        password\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(RegisterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"t07uJLiNIjL4y2xKAXcsrdtoQ7c=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","RegisterButton","jsxDEV","_jsxDEV","RegisterPage","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","errors","setErrors","validateFirstName","namePattern","test","prevErrors","validateLastName","validateEmail","emailPattern","validatePassword","length","validateConfirmPassword","handleSubmit","e","preventDefault","isValidEmail","isValidPassword","isValidConfirmPassword","isValidFirstName","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/kruse/Downloads/Spring-Security-React-App/Spring-Security-React-App/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import './RegisterPage.css'\r\nimport {useState} from \"react\";\r\nimport RegisterButton from \"../components/RegisterButton\";\r\nconst RegisterPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validateFirstName = () => {\r\n        // Name validation logic\r\n        const namePattern = /^[A-Za-z]+$/; // Pattern to allow only alphabetic characters\r\n        if (!namePattern.test(firstName)){\r\n            setErrors(prevErrors => ({ ...prevErrors, firstName: 'Please enter a valid first name'}));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validateLastName = () => {\r\n        // Name validation logic\r\n        const namePattern = /^[A-Za-z]+$/; // Pattern to allow only alphabetic characters\r\n        if (!namePattern.test(lastName)){\r\n            setErrors(prevErrors => ({ ...prevErrors, lastName: 'Please enter a valid last name'}));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    const validateEmail = () => {\r\n        // Email validation logic (regex or other validation methods)\r\n        // For example, regex pattern for email validation\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(email)) {\r\n            setErrors(prevErrors => ({ ...prevErrors, email: 'Please enter a valid email address' }));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        // Password validation logic\r\n        if (password.length < 6) {\r\n            setErrors(prevErrors => ({ ...prevErrors, password: 'Password must be at least 6 characters long' }));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const validateConfirmPassword = () => {\r\n        // Confirm password validation logic\r\n        if (password !== confirmPassword) {\r\n            setErrors(prevErrors => ({ ...prevErrors, confirmPassword: 'Passwords do not match' }));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Reset errors\r\n        setErrors({});\r\n\r\n        // Perform field validations\r\n        const isValidEmail = validateEmail();\r\n        const isValidPassword = validatePassword();\r\n        const isValidConfirmPassword = validateConfirmPassword();\r\n        const isValidFirstName = validateFirstName();\r\n\r\n        // If all validations pass, proceed with registration\r\n        if (isValidEmail && isValidPassword && isValidConfirmPassword && isValidFirstName) {\r\n            // Here you can add your registration logic\r\n            // For simplicity, just log the registration data\r\n            console.log('Registration data:', { firstName, lastName, email, password });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-page-container\">\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n                {errors.firstName && <div className=\"error-message\">{errors.firstName}</div>}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                {errors.email && <div className=\"error-message\">{errors.email}</div>}\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {errors.password && <div className=\"error-message\">{errors.password}</div>}\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n                {errors.confirmPassword && <div className=\"error-message\">{errors.confirmPassword}</div>}\r\n                <RegisterButton />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}